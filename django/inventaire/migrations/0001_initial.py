# Generated by Django 5.0.7 on 2025-04-09 13:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Droits",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "permissions": [
                    ("consult_AMS", "consulter la zone de l'USID d'Angers"),
                    ("consult_BGA", "consulter la zone de l'USID de Bourges-Avord"),
                    ("consult_CBG", "consulter la zone de l'USID de Cherbourg"),
                    ("consult_EVX", "consulter la zone de l'USID d'Évreux"),
                    ("consult_OAN", "consulter la zone de l'USID de Bricy"),
                    ("consult_RVC", "consulter la zone de l'USID de Rennes"),
                    ("consult_TRS", "consulter la zone de l'USID de Tours"),
                    ("modif_AMS", "modifier la zone de l'USID d'Angers"),
                    ("modif_BGA", "modifier la zone de l'USID de Bourges-Avord"),
                    ("modif_CBG", "modifier la zone de l'USID de Cherbourg"),
                    ("modif_EVX", "modifier la zone de l'USID d'Évreux"),
                    ("modif_OAN", "modifier la zone de l'USID de Bricy"),
                    ("modif_RVC", "modifier la zone de l'USID de Rennes"),
                    ("modif_TRS", "modifier la zone de l'USID de Tours"),
                    (
                        "stat_RSSI",
                        "afficher des statistiques détaillées de sa zone (optimisée pour les RSSI)",
                    ),
                    (
                        "stat_BSSI",
                        "afficher des statistiques globales de toutes les zone (optimisée pour les BSSI)",
                    ),
                    (
                        "stat_INT",
                        "afficher des statistiques anonymes globales (pour les décideurs internes)",
                    ),
                    (
                        "stat_EXT",
                        "afficher des statistiques anonymes globales censurées (pour les décideurs externes)",
                    ),
                ],
                "managed": False,
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="DomaineMetier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=3,
                        unique=True,
                        verbose_name="Acronyme du domaine métier",
                    ),
                ),
                (
                    "nom",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Nom du domaine métier"
                    ),
                ),
                (
                    "coeff_criticite",
                    models.PositiveSmallIntegerField(
                        default=1,
                        verbose_name="coefficient multiplicateur (calcul de la criticité)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Domaine métier",
                "verbose_name_plural": "Domaines métiers",
                "db_table": "inventaire_metier_domaine",
                "db_table_comment": "les différents domaines métier",
            },
        ),
        migrations.CreateModel(
            name="Interconnexion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type_reseau",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "autre réseau connecté"),
                            (1, "autre réseau isolé"),
                            (2, "réseau connecté NP (type internet)"),
                            (3, "réseau isolé NP"),
                            (4, "réseau connecté DR (type intradef)"),
                            (5, "réseau isolé DR"),
                            (6, "réseau connecté secret (type intraced)"),
                            (7, "réseau isolé S"),
                        ],
                        verbose_name="Type de réseau",
                    ),
                ),
                (
                    "type_liaison",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "autre"),
                            (1, "filaire"),
                            (2, "wifi"),
                            (3, "bluetooth"),
                            (4, "radio"),
                            (5, "FH"),
                            (6, "GPRS ou 2G"),
                            (7, "3G, 4G ou 5G"),
                            (8, "infrarouge"),
                            (9, "RFID"),
                        ],
                        verbose_name="Type de liaison",
                    ),
                ),
                (
                    "protocole",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=30,
                        verbose_name="Protocole utilisé",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=300,
                        verbose_name="Description / commentaire",
                    ),
                ),
            ],
            options={
                "verbose_name": "Interconnexion",
                "verbose_name_plural": "Interconnexions",
                "db_table": "inventaire_interconnexion",
                "db_table_comment": "toutes les interconnexions entre deux système industriel",
            },
        ),
        migrations.CreateModel(
            name="ContratMaintenance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "zone_usid",
                    models.CharField(
                        choices=[
                            ("AMS", "USID d'Angers"),
                            ("BGA", "USID de Bourges-Avord"),
                            ("CBG", "USID de Cherbourg"),
                            ("EVX", "USID d'Évreux"),
                            ("OAN", "USID de Bricy"),
                            ("RVC", "USID de Rennes"),
                            ("TRS", "USID de Tours"),
                        ],
                        max_length=3,
                        verbose_name="Périmètre de l'USID",
                    ),
                ),
                (
                    "numero_marche",
                    models.CharField(
                        max_length=20, unique=True, verbose_name="Numéro du marché"
                    ),
                ),
                ("date_fin", models.DateField(verbose_name="Date de fin du marché")),
                (
                    "nom_societe",
                    models.CharField(max_length=50, verbose_name="Nom de la société"),
                ),
                (
                    "nom_poc",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=200,
                        verbose_name="Point de contact",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=300,
                        verbose_name="Description / commentaire",
                    ),
                ),
                ("est_actif", models.BooleanField(verbose_name="Contrat actif")),
                (
                    "fiche_date",
                    models.DateField(
                        auto_now=True, verbose_name="Date mise à jour de la fiche"
                    ),
                ),
                (
                    "fiche_corbeille",
                    models.BooleanField(
                        default=False, verbose_name="Contrat placé dans la corbeille"
                    ),
                ),
                (
                    "fiche_utilisateur",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contrats_modifies",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur ayant mis à jour la fiche",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contrat MCO/MCS",
                "verbose_name_plural": "Contrats MCO/MCS",
                "db_table": "inventaire_contrat",
                "db_table_comment": "tous les contrats de maintenance",
            },
        ),
        migrations.CreateModel(
            name="FonctionsMetier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=3, verbose_name="Acronyme de la fonction"
                    ),
                ),
                (
                    "nom",
                    models.CharField(max_length=50, verbose_name="Nom de la fonction"),
                ),
                (
                    "coeff_criticite",
                    models.PositiveSmallIntegerField(
                        default=1,
                        verbose_name="coefficient multiplicateur (calcul de la criticité)",
                    ),
                ),
                (
                    "domaine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fonctions",
                        to="inventaire.domainemetier",
                        verbose_name="Domaine métier de la fonction",
                    ),
                ),
            ],
            options={
                "verbose_name": "Fonction par domaines métiers",
                "verbose_name_plural": "Fonctions par domaines métiers",
                "db_table": "inventaire_metier_fonctions",
                "db_table_comment": "les différentes fonctions par domaines métier",
                "unique_together": {("domaine", "nom", "code")},
            },
        ),
        migrations.CreateModel(
            name="Localisation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "zone_usid",
                    models.CharField(
                        choices=[
                            ("AMS", "USID d'Angers"),
                            ("BGA", "USID de Bourges-Avord"),
                            ("CBG", "USID de Cherbourg"),
                            ("EVX", "USID d'Évreux"),
                            ("OAN", "USID de Bricy"),
                            ("RVC", "USID de Rennes"),
                            ("TRS", "USID de Tours"),
                        ],
                        max_length=3,
                        verbose_name="Périmètre de l'USID",
                    ),
                ),
                (
                    "nom_ville",
                    models.CharField(max_length=50, verbose_name="Nom de la ville"),
                ),
                (
                    "nom_quartier",
                    models.CharField(max_length=50, verbose_name="Nom du quartier"),
                ),
                (
                    "zone_quartier",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=50,
                        verbose_name="Zone dans le quartier",
                    ),
                ),
                (
                    "protection",
                    models.CharField(
                        choices=[
                            ("MC", "milieu civil"),
                            ("TM", "terrain militaire"),
                            ("ZP", "zone protégée"),
                            ("ZDHS", "zone de défense hautement sensible"),
                            ("ZR", "zone réservée"),
                            ("ZNAR", "zone nucléaire d'accès réglementé"),
                            ("ZV", "zone vitale"),
                        ],
                        max_length=4,
                        verbose_name="Niveau de protection de la zone",
                    ),
                ),
                (
                    "sensibilite",
                    models.CharField(
                        choices=[("V", "vitale"), ("H", "haute"), ("M", "moindre")],
                        max_length=1,
                        verbose_name="Sensibilité de la zone",
                    ),
                ),
            ],
            options={
                "verbose_name": "Localisation",
                "verbose_name_plural": "Localisations",
                "db_table": "inventaire_localisation",
                "db_table_comment": "Toutes les emprises",
                "unique_together": {
                    ("zone_usid", "nom_ville", "nom_quartier", "zone_quartier")
                },
            },
        ),
        migrations.CreateModel(
            name="SystemeIndustriel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom", models.CharField(max_length=50, verbose_name="Nom du S2I")),
                (
                    "environnement",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "autre"),
                            (1, "nucléaire"),
                            (2, "cyber"),
                            (3, "opérationnel"),
                        ],
                        verbose_name="Environnement du S2I",
                    ),
                ),
                (
                    "numero_gtp",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=20,
                        verbose_name="Numéro d'identification GTP",
                    ),
                ),
                (
                    "homologation_classe",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "démarche sommaire"),
                            (2, "démarche simplifiée"),
                            (3, "démarche standard"),
                            (99, "non homologué"),
                        ],
                        default=99,
                        verbose_name="Classe d'homologation",
                    ),
                ),
                (
                    "homologation_responsable",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Pas d'entité responsable identifiée"),
                            (1, "Service infrastructure de la défense"),
                            (2, "Secrétariat général pour l'administration"),
                            (3, "Direction générale de l'armement"),
                            (
                                4,
                                "Direction du renseignement et de la sécurité de la défense",
                            ),
                            (5, "État-major des armées"),
                        ],
                        default=0,
                        verbose_name="Autorité responsable du système",
                    ),
                ),
                (
                    "homologation_fin",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date de la fin de l'homologation",
                    ),
                ),
                (
                    "sauvegarde_config",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date de la dernière sauvegarde des configurations",
                    ),
                ),
                (
                    "sauvegarde_donnees",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date de la dernière sauvegarde des données metier",
                    ),
                ),
                (
                    "sauvegarde_comptes",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date de la dernière sauvegarde des comptes",
                    ),
                ),
                (
                    "date_maintenance",
                    models.DateField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Date de la dernière intervention",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=300,
                        verbose_name="Description / commentaire",
                    ),
                ),
                (
                    "fiche_date",
                    models.DateField(
                        auto_now=True, verbose_name="Date mise à jour de la fiche"
                    ),
                ),
                (
                    "fiche_corbeille",
                    models.BooleanField(
                        default=False, verbose_name="S2I placé dans la corbeille"
                    ),
                ),
                (
                    "contrat_mcs",
                    models.ForeignKey(
                        blank=True,
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="systemes",
                        to="inventaire.contratmaintenance",
                        verbose_name="Contrat de MCO/MCS",
                    ),
                ),
                (
                    "domaine_metier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="systemes",
                        to="inventaire.domainemetier",
                        verbose_name="Domaine métier du S2I",
                    ),
                ),
                (
                    "fiche_utilisateur",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="systemes_modifies",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Utilisateur ayant mis à jour la fiche",
                    ),
                ),
                (
                    "fonctions_metiers",
                    models.ManyToManyField(
                        related_name="systemes",
                        to="inventaire.fonctionsmetier",
                        verbose_name="Fonctions associées",
                    ),
                ),
                (
                    "localisation",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="systemes",
                        to="inventaire.localisation",
                        verbose_name="Localisation du S2I",
                    ),
                ),
                (
                    "systemes_connectes",
                    models.ManyToManyField(
                        blank=True,
                        through="inventaire.Interconnexion",
                        to="inventaire.systemeindustriel",
                        verbose_name="Systèmes industriels connectés",
                    ),
                ),
            ],
            options={
                "verbose_name": "Système industriel",
                "verbose_name_plural": "Systèmes industriels",
                "db_table": "inventaire_systeme",
                "db_table_comment": "tous les systèmes industriels d'infrastructure",
                "unique_together": {
                    ("localisation", "nom", "environnement", "domaine_metier")
                },
            },
        ),
        migrations.CreateModel(
            name="MaterielOrdinateur",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fonction",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "poste de maintenance"),
                            (1, "poste de supervision"),
                            (2, "poste d'administration"),
                            (3, "poste de supervision et d'administration"),
                            (4, "serveur d'annuaire"),
                            (5, "serveur de temps"),
                            (6, "serveur de fichier"),
                            (7, "serveur de base de donnée"),
                        ],
                        verbose_name="Fonction principale",
                    ),
                ),
                (
                    "marque",
                    models.CharField(max_length=40, verbose_name="Nom de la marque"),
                ),
                (
                    "modele",
                    models.CharField(max_length=40, verbose_name="Nom du modèle"),
                ),
                (
                    "os_famille",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "autre"),
                            (1, "windows XP"),
                            (2, "windows Vista"),
                            (3, "windows 7"),
                            (4, "windows 8"),
                            (5, "windows 10"),
                            (6, "windows 11"),
                            (7, "windows serveur NT"),
                            (8, "windows serveur 2000"),
                            (9, "windows serveur 2003"),
                            (10, "windows serveur 2008"),
                            (11, "windows serveur 2008 R2"),
                            (12, "windows serveur 2012"),
                            (13, "windows serveur 2012 R2"),
                            (14, "windows serveur 2016"),
                            (15, "windows serveur 2019"),
                            (16, "windows serveur 2022"),
                            (17, "basé sur linux avec UI"),
                            (18, "basé sur linux sans UI"),
                            (19, "basé sur Android"),
                            (20, "propriétaire industriel"),
                        ],
                        verbose_name="Famille de système d'exploitation",
                    ),
                ),
                (
                    "os_version",
                    models.CharField(
                        max_length=50,
                        verbose_name="Numéro de la version du système d'exploitation",
                    ),
                ),
                (
                    "nombre",
                    models.IntegerField(
                        default=1,
                        verbose_name="Nombre de machines déployées pour ce S2I",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=300,
                        verbose_name="Description / commentaire",
                    ),
                ),
                (
                    "systeme",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="materiels_it",
                        to="inventaire.systemeindustriel",
                        verbose_name="Système industriel d'appartenance",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ordinateur",
                "verbose_name_plural": "Ordinateurs",
                "db_table": "inventaire_ordinateur",
                "db_table_comment": "tous les ordinateurs et serveurs",
            },
        ),
        migrations.CreateModel(
            name="MaterielEffecteur",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "autre matériel"),
                            (1, "actionneur intelligent"),
                            (2, "antenne"),
                            (3, "automate"),
                            (4, "camera"),
                            (5, "capteur intelligent"),
                            (6, "centrale de mesure"),
                            (7, "enregistreur"),
                            (8, "horloge"),
                            (9, "hub"),
                            (10, "imprimante"),
                            (11, "onduleur"),
                            (12, "routeur"),
                            (13, "sonde"),
                            (14, "switch (passerelle)"),
                            (15, "télécommande"),
                            (16, "variateur"),
                        ],
                        verbose_name="Type de matériel",
                    ),
                ),
                (
                    "marque",
                    models.CharField(max_length=50, verbose_name="Nom de la marque"),
                ),
                (
                    "modele",
                    models.CharField(max_length=50, verbose_name="Nom du modèle"),
                ),
                (
                    "nombre",
                    models.IntegerField(
                        default=1,
                        verbose_name="Nombre de machines déployées pour ce S2I",
                    ),
                ),
                (
                    "firmware",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=50,
                        verbose_name="Numéro de la version du firmware",
                    ),
                ),
                (
                    "cortec",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=50,
                        verbose_name="Code CORTEC",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=300,
                        verbose_name="Description / commentaire",
                    ),
                ),
                (
                    "systeme",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="materiels_ot",
                        to="inventaire.systemeindustriel",
                        verbose_name="Système industriel d'appartenance",
                    ),
                ),
            ],
            options={
                "verbose_name": "Matériel intelligent",
                "verbose_name_plural": "Matériels intelligents",
                "db_table": "inventaire_effecteur",
                "db_table_comment": "tous les capteurs, actionneurs et éléments actifs de réseau",
            },
        ),
        migrations.CreateModel(
            name="LicenceLogiciel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "editeur",
                    models.CharField(max_length=50, verbose_name="Nom de l'éditeur"),
                ),
                (
                    "logiciel",
                    models.CharField(max_length=50, verbose_name="Nom du logiciel"),
                ),
                (
                    "version",
                    models.CharField(
                        max_length=50, verbose_name="Numéro de la version du logiciel"
                    ),
                ),
                (
                    "licence",
                    models.CharField(
                        max_length=100, verbose_name="Numéro de la licence"
                    ),
                ),
                (
                    "date_fin",
                    models.DateField(verbose_name="Date d'expiration de la licence"),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        default="",
                        max_length=300,
                        verbose_name="Description / commentaire",
                    ),
                ),
                (
                    "systeme",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="licences",
                        to="inventaire.systemeindustriel",
                        verbose_name="Système industriel d'appartenance",
                    ),
                ),
            ],
            options={
                "verbose_name": "Licence de logiciel",
                "verbose_name_plural": "Licences de logiciels",
                "db_table": "inventaire_licence",
                "db_table_comment": "toutes les licences utilisées par le S2I",
            },
        ),
        migrations.AddField(
            model_name="interconnexion",
            name="systeme_from",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="systeme_from",
                to="inventaire.systemeindustriel",
            ),
        ),
        migrations.AddField(
            model_name="interconnexion",
            name="systeme_to",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="systeme_to",
                to="inventaire.systemeindustriel",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="interconnexion",
            unique_together={("systeme_from", "systeme_to")},
        ),
    ]

# Workflow pour tester puis publier la branche principale en conteneur

name: Publish Edge

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - django/**
      - nginx/**
      - postgres/**
      - redis/**

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.11, 3.12, 3.13 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install coverage
          pip install -r django/requirements.txt

      - name: Run Tests
        run: |
          coverage run django/manage.py test inventaire

      - name: Make Report
        run: |
          coverage report

  build:
    runs-on: ubuntu-latest
    needs: [ test ]
    strategy:
      matrix:
        include:
          - image: spystrach/oasis_poc-django
            context: ./django
            dockerfile: django/Dockerfile.prod
          - image: spystrach/oasis_poc-celery
            context: ./django
            dockerfile: django/Dockerfile.celery
          - image: spystrach/oasis_poc-nginx
            context: ./nginx
            dockerfile: nginx/Dockerfile
          - image: spystrach/oasis_poc-postgres
            context: ./postgres
            dockerfile: postgres/Dockerfile
          - image: spystrach/oasis_poc-redis
            context: ./redis
            dockerfile: redis/Dockerfile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image }}
          tags: |
            type=edge,branch=main

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ${{ matrix.dockerfile }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
